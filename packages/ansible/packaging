#!/usr/bin/env bash

# abort script on any command that exits with a non zero value
set -e -x

# Grab the latest versions that are in the directory
ANSIBLE_VERSION=$(ls -r ansible/ansible-*.tar.gz | sed 's/.*\/ansible-\(.*\)\.tar\.gz$/\1/' | head -1)
PYCRYPTO_VERSION=$(ls -r ansible/pycrypto-*.tar.gz | sed 's/.*\/pycrypto-\(.*\)\.tar\.gz$/\1/' | head -1)
JINJA_VERSION=$(ls -r ansible/jinja-*.tar.gz | sed 's/.*\/jinja-\(.*\)\.tar\.gz$/\1/' | head -1)
PARAMIKO_VERSION=$(ls -r ansible/paramiko-*.tar.gz | sed 's/.*\/paramiko-\(.*\)\.tar\.gz$/\1/' | head -1)
LIBFFI_VERSION="3.2.1"
BOSH_PACKAGES_DIR=${BOSH_PACKAGES_DIR:-/var/vcap/packages}
JOB_NAME="ansible"

# Integrate contents of all packages to this folder, so only this package needs
# to be included in the job
for pkg in $(ls --ignore=ansible ${BOSH_PACKAGES_DIR}); do
    echo "Integrating ${BOSH_PACKAGES_DIR}/${pkg}/* in ${BOSH_INSTALL_TARGET}"
    cp -av ${BOSH_PACKAGES_DIR}/${pkg}/* ${BOSH_INSTALL_TARGET}
done


echo "Extracting pycrypto ${PYCRYPTO_VERSION} ..."
tar xvf "ansible/pycrypto-${PYCRYPTO_VERSION}.tar.gz"

echo "Extracting jinja ${JINJA_VERSION} ..."
tar xvf "ansible/jinja-${JINJA_VERSION}.tar.gz"

echo "Extracting paramiko ${PARAMIKO_VERSION} ..."
tar xvf "ansible/paramiko-${PARAMIKO_VERSION}.tar.gz"

echo "Extracting ansible ${ANSIBLE_VERSION} ..."
tar xvf "ansible/ansible-${ANSIBLE_VERSION}.tar.gz"

echo "Creating python site packages folder ..."
mkdir -p ${BOSH_INSTALL_TARGET}/lib/python2.7/site-packages


# In all these paths the priority is set to the current folder, why?
# * to make it usable when contents from other packages are copied (integrated) on this package
# * to reuse this package in other releases (as standalone package)
# Python setuptools/pip install the contents and create the shebang based
# on the python binary location, so sometimes the shebang does not point
# a proper path in case the contents were copied from other package.
# The option in setup.py "build --executable='python'" defines the shebang,
# but depending on the setuptools, is not always working.

echo "Setting the PYTHONPATH with setuptools and ansible site packages ..."
PYTHONPATH="${BOSH_INSTALL_TARGET}/lib/python2.7/site-packages:${PYTHONPATH}"
for package_python_dir in $(ls -d ${BOSH_PACKAGES_DIR}/*/lib/python*/site-packages 2>/dev/null); do
    PYTHONPATH="${package_python_dir}:${PYTHONPATH}"
done
for package_python_dir in $(ls -d ${BOSH_INSTALL_TARGET}/lib/python*/site-packages 2>/dev/null); do
    PYTHONPATH="${package_python_dir}:${PYTHONPATH}"
done
export PYTHONPATH

echo "Setting libs path ..."
for package_lib_dir in $(ls -d ${BOSH_PACKAGES_DIR}/*/lib 2>/dev/null); do
    LIBRARY_PATH="${package_lib_dir}:${LIBRARY_PATH}"
done
export LIBRARY_PATH="${BOSH_INSTALL_TARGET}/lib:${LIBRARY_PATH}"
export LD_LIBRARY_PATH="${LIBRARY_PATH}"

echo "Setting path ..."
for package_bin_dir in $(ls -d ${BOSH_PACKAGES_DIR}/*/bin 2>/dev/null); do
    PATH="${package_bin_dir}:${PATH}"
done
export PATH="${BOSH_INSTALL_TARGET}/bin:${PATH}"

echo "Setting setuptools build sources ..."
CPATH="${BOSH_PACKAGES_DIR}/libffi/lib/libffi-${LIBFFI_VERSION}/include"
for package_cpath_dir in $(ls -d ${BOSH_PACKAGES_DIR}/*/include 2>/dev/null); do
    CPATH="${package_cpath_dir}:${CPATH}"
done
export CPATH="${BOSH_INSTALL_TARGET}/include:${CPATH}"

echo "Installing pycrypto ..."
pushd "pycrypto-${PYCRYPTO_VERSION}"
  # python setup.py build --executable='python' install --prefix=${BOSH_INSTALL_TARGET}
  python setup.py install --prefix=${BOSH_INSTALL_TARGET}
popd

echo "Installing jinja ..."
pushd "jinja-${JINJA_VERSION}"
  # python setup.py build --executable='python' install --prefix=${BOSH_INSTALL_TARGET}
  python setup.py install --prefix=${BOSH_INSTALL_TARGET}
popd

echo "Installing paramiko ..."
pushd "paramiko-${PARAMIKO_VERSION}"
  # python setup.py build --executable='python' install --prefix=${BOSH_INSTALL_TARGET}
  python setup.py install --prefix=${BOSH_INSTALL_TARGET}
popd

echo "Installing ansible ..."
pushd "ansible-${ANSIBLE_VERSION}"
  # python setup.py build --executable='python' install --prefix=${BOSH_INSTALL_TARGET}
  python setup.py install --prefix=${BOSH_INSTALL_TARGET}
popd

# remove full path in *.pth
for pth in $(ls ${BOSH_INSTALL_TARGET}/lib/python*/site-packages/*.pth 2>/dev/null); do
  echo "Changing full path in: $pth"
  sed -i -e 's:^/var/vcap/data/packages/.*/site-packages:.:' $pth
done

